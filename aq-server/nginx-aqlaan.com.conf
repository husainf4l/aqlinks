server {
    listen 80;
    listen [::]:80;
    server_name aqlaan.com www.aqlaan.com;
    
    # Redirect HTTP to HTTPS
    return 301 https://$server_name$request_uri;
}

server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name aqlaan.com www.aqlaan.com;

    # SSL Configuration
    ssl_certificate /etc/letsencrypt/live/aqlaan.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/aqlaan.com/privkey.pem;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers HIGH:!aNULL:!MD5;
    ssl_prefer_server_ciphers on;

    # /aq_server/* â†’ API Server (net/http on port 8080)
    location /aq_server/ {
        proxy_pass http://localhost:8080/;
        
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # WebSocket support
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        
        # Timeout settings for long-lived connections
        proxy_connect_timeout 7d;
        proxy_send_timeout 7d;
        proxy_read_timeout 7d;
        
        # CORS headers
        add_header 'Access-Control-Allow-Origin' '*' always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
        add_header 'Access-Control-Allow-Headers' 'Content-Type, Authorization' always;
        
        if ($request_method = 'OPTIONS') {
            return 204;
        }
    }

    # /demo â†’ Serve HTML UI from port 8080
    location /demo {
        proxy_pass http://localhost:8080/;
        
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # / â†’ Root welcome message (no fallback proxy)
    location / {
        return 200 "Welcome to aqlaan.com\n\nâœ… API Server: https://aqlaan.com/aq_server/\n\nðŸ“š API Endpoints:\n  â€¢ POST /aq_server/api/v1/tokens - Generate access token\n  â€¢ GET /aq_server/api/v1/rooms - List rooms\n  â€¢ POST /aq_server/api/v1/rooms - Create room\n  â€¢ GET /aq_server/api/v1/rooms/:roomId - Get room details\n  â€¢ PUT /aq_server/api/v1/rooms/:roomId - Update room\n  â€¢ DELETE /aq_server/api/v1/rooms/:roomId - Delete room\n\nðŸŽ¥ UI Demo:\n  â€¢ Visit https://aqlaan.com/aq_server/ for the video conferencing UI\n  â€¢ Visit https://aqlaan.com/demo for the demo page\n\nðŸš€ Frontend:\n  â€¢ Coming soon at https://aqlaan.com/\n";
        add_header Content-Type text/plain;
    }
}
